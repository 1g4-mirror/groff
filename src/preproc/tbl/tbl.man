.ig
Copyright (C) 1989-1995, 2001, 2002, 2003, 2004, 2006, 2007, 2008
  Free Software Foundation, Inc.

Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
..
.
.
.TH @G@TBL @MAN1EXT@ "@MDATE@" "Groff Version @VERSION@"
.
.
.SH NAME
@g@tbl \- format tables for troff
.
.
.SH SYNOPSIS
.SY @g@tbl
.OP \-Cv
.RI [ files\~ .\|.\|.]
.YS
.
.
.SH DESCRIPTION
This manual page describes the GNU version of
.BR tbl ,
which is part of the groff document formatting system.
.B tbl
compiles descriptions of tables embedded within
.B troff
input files into commands that are understood by
.BR troff .
Normally, it should be invoked using the
.B \-t
option of
.B groff.
It is highly compatible with Unix
.BR tbl .
The output generated by GNU
.B tbl
cannot be processed with Unix
.BR troff ;
it must be processed with GNU
.BR troff .
If no files are given on the command line or a filename of
.B \-
is given, the standard input is read.
.
.
.SH OPTIONS
.TP
.B \-C
Enable compatibility mode to
recognize
.B .TS
and
.B .TE
even when followed by a character other than space or newline.
Leader characters (\[rs]a) are handled as interpreted.
.
.TP
.B \-v
Print the version number.
.
.
.SH USAGE
.B tbl
expects to find table descriptions wrapped in the
.B .TS
(table start) and
.B .TE
(table end) macros.
The line immediately following the
.B .TS
macro may contain any of the following global options (ignoring the case of
characters \[en] Unix tbl only accepts options with all characters lowercase
or all characters uppercase), separated by spaces, tabs, or commas:
.
.TP
.B allbox
Enclose each item of the table in a box.
.
.TP
.B box
Enclose the table in a box.
.
.TP
.B center
Center the table (default is left-justified).
The alternative keyword name
.B centre
is also recognized (this is a GNU tbl extension).
.
.TP
.BI decimalpoint( c )
Set the character to be recognized as the decimal point in numeric
columns (GNU tbl only).
.
.TP
.BI delim( xy )
Use
.I x
and\~\c
.I y
as start and end delimiters for
.BR @g@eqn (@MAN1EXT@).
.
.TP
.B doublebox
Enclose the table in a double box.
.
.TP
.B doubleframe
Same as doublebox (GNU tbl only).
.
.TP
.B expand
Make the table as wide as the current line length (providing a column
separation factor).
In case the sum of the column widths is larger than the current line length,
the column separation factor is set to zero; such tables extend into the
right margin, and there is no column separation at all.
.
.TP
.B frame
Same as box (GNU tbl only).
.
.TP
.BI linesize( n )
Set lines or rules (e.g. from
.BR box )
in
.IR n -point
type.
.
.TP
.B nokeep
Don't use diversions to prevent page breaks (GNU tbl only).
Normally
.B tbl
attempts to prevent undesirable breaks in the table by using diversions.
This can sometimes interact badly with macro packages' own use of
diversions, when footnotes, for example, are used.
.
.TP
.B nospaces
Ignore leading and trailing spaces in data items (GNU tbl only).
.
.TP
.BI tab( x )
Use the character
.I x
instead of a tab to separate items in a line of input data.
.
.LP
The global options must end with a semicolon.
There might be whitespace between an option and its argument in parentheses.
.
.LP
After global options come lines describing the format of each line of
the table.
Each such format line describes one line of the table itself, except that
the last format line (which you must end with a period) describes all
remaining lines of the table.
A single key character describes each column of each line of the table.
Key characters can be separated by spaces or tabs.
You may run format specs for multiple lines together on the same line by
separating them with commas.
.
.LP
You may follow each key character with specifiers that determine the font
and point size of the corresponding item, that determine column width,
inter-column spacing, etc.
.
.LP
The longest format line defines the number of columns in the table; missing
format descriptors at the end of format lines are assumed to be\~\c
.BR L .
Extra columns in the data (which have no corresponding format entry) are
ignored.
.
.LP
The available key characters are:
.
.TP
.BR a , A
Center longest line in this column and then left-justifies all other lines
in this column with respect to that centered line.
.
.TP
.BR c , C
Center item within the column.
.
.TP
.BR l , L
Left-justify item within the column.
.
.TP
.BR n , N
Numerically justify item in the column: Units positions of numbers are
aligned vertically.
.
.TP
.BR r , R
Right-justify item within the column.
.
.TP
.BR s , S
Span previous item on the left into this column.
.
.TP
.B ^
Span down entry from previous row in this column.
.
.TP
.BR _ , -
Replace this entry with a horizontal line.
.
.TP
.B =
.
Replace this entry with a double horizontal line.
.
.TP
.B |
The corresponding column becomes a vertical rule (if two of these are
adjacent, a double vertical rule).
.
.LP
A vertical bar to the left of the first key-letter or to the right of the
last one produces a line at the edge of the table.
.
.LP
Here are the specifiers that can appear in suffixes to column key letters:
.
.TP
.BR b , B
Short form of
.B fB
(make affected entries bold).
.
.TP
.BR d , D
Start an item vertically spanning rows at the bottom of its range rather
than vertically centering it (GNU tbl only).
.
.TP
.BR e , E
Make equally-spaced columns.
.
.TP
.BR f , F
Either of these specifiers may be followed by a font name (either one or two
characters long), font number (a single digit), or long name in parentheses
(the last form is a GNU tbl extension).
A one-letter font name must be separated by one or more blanks from whatever
follows.
.
.TP
.BR i , I
Short form of
.B fI
(make affected entries italic).
.
.TP
.BR m , M
This is a GNU tbl extension.
Either of these specifiers may be followed by a macro name 
(either one or two characters long),
or long name in parentheses.
A one-letter macro name must be separated by one or more blanks
from whatever follows.
The macro which name can be specified here
must be defined before creating the table.
It is called just before the table's cell text is output. 
As implemented currently, this macro is only called if block input is used,
that is, text between `T{' and `T}'.
The macro should contain only simple
.B troff
requests to change the text block formatting, like text adjustment,
hyphenation, size, or font.
The macro is called
.I after
other cell modifications like
.BR b ,
.B f
or
.B v
are output.
Thus the macro can overwrite other modification specifiers.
.
.TP
.BR p , P
Followed by a number, this does a point size change for the affected fields.
If signed, the current point size is incremented or decremented (using a
signed number instead of a signed digit is a GNU tbl extension).
A point size specifier followed by a column separation number must be
separated by one or more blanks.
.
.TP
.BR t , T
Start an item vertically spanning rows at the top of its range rather than
vertically centering it.
.
.TP
.BR u , U
Move the corresponding column up one half-line.
.
.TP
.BR v , V
Followed by a number, this indicates the vertical line spacing to be used in
a multi-line table entry.
If signed, the current vertical line spacing is incremented or decremented
(using a signed number instead of a signed digit is a GNU tbl extension).
A vertical line spacing specifier followed by a column separation number
must be separated by one or more blanks.
No effect if the corresponding table entry isn't a text block.
.
.TP
.BR w , W
Minimal column width value.
Must be followed either by a
.BR @g@troff (@MAN1EXT@)
width expression in parentheses or a unitless integer.
If no unit is given, en units are used.
Also used as the default line length for included text blocks.
If used multiple times to specify the width for a particular column,
the last entry takes effect.
.
.TP
.BR z , Z
Ignore the corresponding column for width-calculation purposes, this is,
don't use the fields but only the specifiers of this column to compute
its width.
.
.LP
A number suffix on a key character is interpreted as a column
separation in en units (multiplied in proportion if the
.B expand
option is on \[en] in case of overfull tables this might be zero).
Default separation is 3n.
.
.LP
The format lines are followed by lines containing the actual data for the
table, followed finally by
.BR .TE .
Within such data lines, items are normally separated by tab characters (or
the character specified with the
.B tab
option).
Long input lines can be broken across multiple lines if the last character
on the line is `\[rs]' (which vanishes after concatenation).
.
.LP
Note that
.B @g@tbl
computes the column widths line by line, applying \[rs]w on each entry
which isn't a text block.
As a consequence, constructions like
.IP
.B .TS
.br
.B c,l.
.br
.B \[rs]s[20]MM
.br
.B MMMM
.br
.B .TE
.br
.
.LP
fail; you must either say
.IP
.B .TS
.br
.B cp20,lp20.
.br
.B MM
.br
.B MMMM
.br
.B .TE
.br
.
.LP
or
.IP
.B .TS
.br
.B c,l.
.br
.B \[rs]s[20]MM
.br
.B \[rs]s[20]MMMM
.br
.B .TE
.br
.
.LP
A dot starting a line, followed by anything but a digit is handled as a
troff command, passed through without changes.
The table position is unchanged in this case.
.
.LP
If a data line consists of only `_' or `=', a single or double line,
respectively, is drawn across the table at that point; if a single item in a
data line consists of only `_' or `=', then that item is replaced by a
single or double line, joining its neighbours.
If a data item consists only of `\[rs]_' or `\[rs]=', a single or double line,
respectively, is drawn across the field at that point which does not join
its neighbours.
.
.LP
A data item consisting only of `\[rs]Rx' (`x' any character) is replaced by
repetitions of character `x' as wide as the column (not joining its
neighbours).
.
.LP
A data item consisting only of `\[rs]^' indicates that the field immediately
above spans downward over this row.
.
.LP
A text block can be used to enter data as a single entry which would be
too long as a simple string between tabs.
It is started with `T{' and closed with `T}'.
The former must end a line, and the latter must start a line, probably
followed by other data columns (separated with tabs or the character given
with the
.B tab
global option).
By default, the text block is formatted with the settings which were
active before entering the table, possibly overridden by the
.BR m ,
.BR v ,
and
.B w
tbl specifiers.
For example, to make all text blocks ragged-right, insert
.B .na
right before the starting
.B .TS
(and
.B .ad
after the table).
If `w' specifiers are not given for all columns of a text block span, the
default length of the text block (to be more precise, the line length used
to process the text block diversion) is computed as L\[tmu]C/(N+1), where
`L' is the current line length, `C' the number of columns spanned by the
text block, and `N' the total number of columns in the table.
Note, however, that the actual diversion width as given in register
.B \[rs]n[dl]
is used eventually as the text block width.
.
.LP
To change the data format within a table, use the
.B .T&
command (at the start of a line).
It is followed by format and data lines (but no global options) similar to
the
.B .TS
request.
.
.LP
The number register
.B \[rs]n[TW]
holds the table width; it can't be used within the table itself but is defined
right before calling
.B .TE
so that this macro can make use of it.
.
.LP
.B tbl
also defines a macro
.B .T#
which produces the bottom and side lines of a boxed table.
While
.B tbl
does call this macro itself at the end of the table, it can be used by
macro packages to create boxes for multi-page tables by calling it within the
page footer.
An example of this is shown by the
.B \-ms
macros which provide this functionality if a table starts with
.B .TS\ H
instead of the standard call to the
.B .TS
macro.
.
.
.SH "INTERACTION WITH @G@EQN"
.BR @g@tbl (@MAN1EXT@)
should always be called before
.BR @g@eqn (@MAN1EXT@)
.RB ( groff (@MAN1EXT@)
automatically takes care of the correct order of preprocessors).
.
.
.SH "GNU TBL ENHANCEMENTS"
There is no limit on the number of columns in a table, nor any limit on the
number of text blocks.
All the lines of a table are considered in deciding column widths, not just
the first 200.
Table continuation
.RB ( .T& )
lines are not restricted to the first 200 lines.
.
.LP
Numeric and alphabetic items may appear in the same column.
.
.LP
Numeric and alphabetic items may span horizontally.
.
.LP
.B @g@tbl
uses register, string, macro and diversion names beginning with the digit\~\c
.BR 3 .
When using
.B @g@tbl
you should avoid using any names beginning with a\~\c
.BR 3 .
.
.
.SH "GNU TBL WITHIN MACROS"
Since
.B @g@tbl
defines its own macros (right before each table) it is necessary to use
an `end-of-macro' macro.  Additionally, the escape character has to be switched
off.  Here an example.
.IP
.B .eo
.br
.B .de ATABLE ..
.br
.B .TS
.br
.B allbox tab(;);
.br
.B cl.
.br
.B \[rs]$1;\[rs]$2
.br
.B .TE
.br
.B ...
.br
.B .ec
.br
.B .ATABLE A table
.br
.B .ATABLE Another table
.br
.B .ATABLE And \[dq]another one\[dq]
.
.LP
Note, however, that not all features of
.B @g@tbl
can be wrapped into a macro because
.B @g@tbl
sees the input earlier than 
.BR @g@troff .
For example, number formatting with vertically aligned decimal points
fails if those numbers are passed on as macro parameters because
decimal point alignment is handled by
.B @g@tbl
itself: It only sees `\[rs]$1', `\[rs]$2', etc., and therefore can't
recognize the decimal point.
.
.
.SH BUGS
You should use
.BR .TS\ H / .TH
in conjunction with a supporting macro package for
.I all
multi-page boxed tables.
If there is no header that you wish to appear at the top of each page
of the table, place the
.B .TH
line immediately after the format section.
Do not enclose a multi-page table within keep/release macros,
or divert it in any other way.
.
.LP
A text block within a table must be able to fit on one page.
.
.LP
The
.B bp
request cannot be used to force a page-break in a multi-page table.
Instead, define
.B BP
as follows
.IP
.B .de BP
.br
.B .ie '\[rs]\[rs]n(.z'' .bp \[rs]\[rs]$1
.br
.B .el \[rs]!.BP \[rs]\[rs]$1
.br
.B ..
.br
.
.LP
and use
.B BP
instead of
.BR bp .
.
.LP
Using \[rs]a directly in a table to get leaders does not work (except in
compatibility mode).
This is correct behaviour: \[rs]a is an
.B uninterpreted
leader.
To get leaders use a real leader, either by using a control A or like
this:
.IP
.nf
.ft B
\&.ds a \[rs]a
\&.TS
tab(;);
lw(1i) l.
A\[rs]*a;B
\&.TE
.ft
.fi
.
.
.SH REFERENCE
Lesk, M.E.: "TBL \[en] A Program to Format Tables".
For copyright reasons it cannot be included in the groff distribution,
but copies can be found with a title search on the World Wide Web.
.
.
.SH "SEE ALSO"
.BR groff (@MAN1EXT@),
.BR @g@troff (@MAN1EXT@)
.
.\" Local Variables:
.\" mode: nroff
.\" End:
