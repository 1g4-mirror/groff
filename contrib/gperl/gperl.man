.TH GPERL @MAN1EXT@ "@MDATE@" "Groff Version @VERSION@"
.SH NAME
gperl \- groff preprocessor for Perl parts in roff files
.
.SH "SYNOPSIS"
.\" The .SH was moved to this place in order to appease `apropos'.
.
.\" --------------------------------------------------------------------
.\" Legalese
.\" --------------------------------------------------------------------
.
.de authors
This file was written by Bernd Warken <groff-bernd.warken-72@web.de>.
.
Latest update: 14 Jun 2014
..
.
.de copyright
Copyright (C) 2014 Free Software Foundation, Inc.
.
.P
This file is part of
.IR \%gperl ,
which is part of
.IR \%groff ,
a free software project.
.
You can redistribute it and/or modify it under the terms of the
.nh
.B "GNU General Public License"
.hy
as published by the
.nh
.BR "Free Software Foundation" ,
.hy
version\~2.
.
.P
The license text is available in the internet at
.UR http://www.gnu.org/licenses/gpl-2.0.html
.UE .
..
.
.\" --------------------------------------------------------------------
.\" Setup
.\" --------------------------------------------------------------------
.
.
.char \[Ellipsis] \f[S]\N'188'\fP
.
.\" ds Ellipsis \[el]
.\" ds Ellipsis "\&.\|.\|.\&\"
.
.\" --------------------------------------------------------------------
.\" Macro definitions
.
.\" --------------------------------------------------------------------
.\" .CB  (<text>...)
.\"
.\" Print in constant-width bold font.
.\"
.de CB
.  ft CB
.  Text \\$*
.  ft
..
.\" --------------------------------------------------------------------
.\" .CI  (<text>...)
.\"
.\" Print in constant-width italic font.
.\"
.de CI
.  ft CI
.  Text \\$*
.  ft
..
.\" --------------------------------------------------------------------
.\" .CR  (<text>...)
.\"
.\" Print in constant-width roman font.
.\"
.de CR
.  ft CR
.  Text \\$*
.  ft
..
.
.\" --------------------------------------------------------------------
.\" .Topic  ([<indent>])
.\"
.\" A bulleted paragraph
.\"
.de Topic
.  ie \\n[.$]=0 \
.    ds @indent 2m\"
.  el \
.    ds @indent \\$1\"
.  IP \[bu] \\*[@indent]
.  rm @indent
..
.
.\" End of macro definitions
.
.
.\" --------------------------------------------------------------------
.\" SH "SYNOPSIS"
.\" --------------------------------------------------------------------
.
.SY gperl
.OP \fIoption \[Ellipsis]
.OP --
.OP \fI\%filespec \[Ellipsis]
.YS
.
.SY gperl
.BR -h | --help
.YS
.
.SY gperl
.BR -v | --version
.YS
.
.
.\" --------------------------------------------------------------------
.SH DESCRIPTION
.\" --------------------------------------------------------------------
.
This is a preprocesor for
.BR \%groff (@MAN1EXT@).
.
It allows to add
.BR perl (7)
code into
.BR groff (7)
files.
.
The result of a
.I Perl part
can be stored in a
.I groff string
within the final line of a
.IR "Perl part" .
.
.
.\" --------------------------------------------------------------------
.SH "OPTIONS"
.\" --------------------------------------------------------------------
.
So far, there are only
.IR "breaking options" ,
that means that the program writes the asked for information and
stops a running program line.
.
All other arguments are ignored.
.
These options are
.
.TP
.B -h\~\fR|\fB\~--help
Print help information with a short explanation of options to
standard output.
.
.
.TP
.B -v\~\fR|\fB\~--version
Print version information to standard output.
.
.
.\" --------------------------------------------------------------------
.SH "PERL PARTS"
.\" --------------------------------------------------------------------
.
.I Perl
parts in
.I groff files
are enclosed by two
.B .Perl
requests with different arguments, a
.I starting
and an
.I ending
command.
.
.
.\" --------------------------------------------------------------------
.SS "Starting Perl Mode"
.\" --------------------------------------------------------------------
.
The starting
.I Perl request
can either be without arguments, or by a request that has the term
.B start
as its first argument.
.RS
.Topic
.B \&.Perl
.Topic
.B \&.Perl start
.RE
.
All arguments after
.B start
are ignored.
.
.
.\" --------------------------------------------------------------------
.SS "Ending Perl Mode without Storage"
.\" --------------------------------------------------------------------
.
A
.B .Perl
command line with an argument different from
.B start
finishes a running
.IR "Perl part" .
.
Of course, it would be reasonable to add the argument
.BR stop ;
that's possible, but not necessary.
.
.RS
.Topic
.B \&.Perl stop
.Topic
.BI \&.Perl " other_than_start"
.RE
.
The argument
.I other_than_start
can additionally used as a variable name for storage, see next
section.
.
.
.\" --------------------------------------------------------------------
.SS "Ending Perl Mode with Storage"
.\" --------------------------------------------------------------------
.
A useful feature of
.B gperl
is to store some result from the
.IR "Perl mode" .
.
.
.P
That can be done by running the
.I Perl part
within
.B gperl
using one of the
.I Perl commands
from
.BR IPC::System::Simple .
.
We use now the program
.B capture
for running the
.IR "Perl parts" .
.
.
.P
The related storage information comes from the collection of all
printing to standard output with the normal Perl
.B print
command in a
.IR "Perl part" .
.
This pseudo-printing information does not go to
.I STDOUT
as normally, but is received as the result from the program, which
runs the
.IR "Perl part" .
.
.
.P
But the printing towards
.IR STDERR ,
(standard error) works as usual.
.
All error information goes to the real normal
.IR "standard error" ,
without other automatical storage.
.
.
.P
To use that output from the
.I Perl part
for
.IR roff ,
.B gperl
creates automatically a line with the string defining roff command
.BR .ds .
.
Because of the Perl-structure of the result, only string output can be
used, not
.IR "numerical roff registers" .
.
In
.BR \%groff (@MAN7EXT@),
one can create registers from strings.
.
.
.B
As the
.I Perl mode
must first be finished to get the information, this storage can only
be done by arguments in the final
.B .Perl
command.
.
Possible arguments are
.
.RS
.Topic
.BI .Perl " var_name"
.Topic
.BI ".Perl ds" " var_name"
.Topic
.BI ".Perl .ds" " var_name"
.Topic
.BI ".Perl stop" " var_name"
.Topic
.BI ".Perl stop ds" " var_name"
.Topic
.BI ".Perl stop .ds" " var_name"
.RE
.
.
.P
The
.I var_name
is some word that will be used by
.B gperl
for a
.B .ds
roff string definition.
.
If this
.I var_name
is the only argument, it must be different from
.BR start ,
at other argument places it can be chosen arbitrarily, but without
spaces.
.
.
.\" --------------------------------------------------------------------
.SH "EXAMPLE"
.\" --------------------------------------------------------------------
.
A possible
.I Perl part
in a
.I roff file
could look like that:
.RS
.EX
before
\&.Perl start
my $result = 'some data';
print $result . \[rq]\[rs]n\[rq];
\&.Perl stop .ds some_string 
after
.EE
.RE
.
.
.P
This stores the result
.B \[rq]some data\[rq]
into the
.I roff string
called
.BR some_string ,
such that the following line is printed:
.RS
.EX
\&.ds some_string some data
.EE
.RE
by
.B gperl
as food for the coming
.B groff
run.
.
.
.\" --------------------------------------------------------------------
.SH "SEE ALSO"
.\" --------------------------------------------------------------------
.
.P
.BR \%groff (@MAN1EXT@),
.BR \%groff (@MAN7EXT@),
.BR \%grog (@MAN1EXT@),
.BR \%groffer (@MAN1EXT@),
.BR \%perl (@MAN1EXT@),
.BR \%perl (@MAN7EXT@).
.
.
.\" --------------------------------------------------------------------
.SH "AUTHOR"
.\" --------------------------------------------------------------------
.authors
.
.
.\" --------------------------------------------------------------------
.SH "COPYING"
.\" --------------------------------------------------------------------
.copyright
.
.
.\" --------------------------------------------------------------------
.\" Emacs settings
.\" --------------------------------------------------------------------
.
.\" Local Variables:
.\" mode: nroff
.\" End:
