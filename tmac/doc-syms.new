.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by the University of
.\"      California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)doc-syms 5.6 (Berkeley) 8/5/91
.\"
.\"     %beginstrip%
.
.
.\" NS Ux user macro
.\" NS   print UNIX
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS
.\" NS local variable:
.\" NS   doc-str-Ux, doc-reg-Ux
.\" NS
.\" NS width register `Ux' defined in doc-common
.
.de Ux
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-Ux \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Ux
.      doc-parse-args \$@
.    \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] \*[doc-Tn-font-size]UNIX\*[doc-str-Ux]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-Ux (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-Ux]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" NS Bx user macro
.\" NS   print BSD (fix smaller nroff version)
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS
.\" NS local variable:
.\" NS   doc-str-Bx, doc-str-Bx1, doc-reg-Bx
.\" NS
.\" NS width register `Bx' defined in doc-common
.
.de Bx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-Bx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  \" default value if no argument
.  ds doc-str-Bx1 \*[doc-Tn-font-size]BSD\*[doc-str-Bx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Bx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie        "\*[doc-arg\n[doc-arg-ptr]]"-alpha" \
.        as doc-str-Bx1 " (currently in alpha test)
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-beta" \
.        as doc-str-Bx1 " (currently in beta test)
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-devel" \
.        as doc-str-Bx1 " (currently under development)
.      el \{\
.        ds doc-str-Bx1 \&\*[doc-arg\n[doc-arg-ptr]]\^\*[doc-Tn-font-size]
.        as doc-str-Bx1 BSD\*[doc-str-Bx]
.
.        if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.          nr doc-arg-ptr +1
.          ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.            ie        "\*[doc-arg\n[doc-arg-ptr]]"Reno" \
.              as doc-str-Bx1 \-Reno
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"reno" \
.              as doc-str-Bx1 \-Reno
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"Tahoe" \
.              as doc-str-Bx1 \-Tahoe
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"tahoe" \
.              as doc-str-Bx1 \-Tahoe
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"Lite" \
.              as doc-str-Bx1 \-Lite
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"lite" \
.              as doc-str-Bx1 \-Lite
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"Lite2" \
.              as doc-str-Bx1 \-Lite2
.            el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"lite2" \
.              as doc-str-Bx1 \-Lite2
.            el \
.              nr doc-arg-ptr -1
.            \}\}\}\}\}\}\}
.          \}
.          el \
.            nr doc-arg-ptr -1
.    \}\}\}\}\}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Bx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-Bx (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-Bx]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" NS Ud user macro (not parsed, not callable)
.\" NS   print "currently under development" (HISTORY section)
.\" NS
.\" NS width register `Ud' defined in doc-common
.
.de Ud
.  nop \&currently under development.
..
.
.
.\" NS At user macro
.\" NS   print AT&T UNIX
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS
.\" NS local variable:
.\" NS   doc-str-At, doc-str-At1, doc-reg-At
.\" NS
.\" NS width register `At' defined in doc-common
.
.de At
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-At \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  \" default value if no argument
.  ds doc-str-At1 \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name At
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie        "\*[doc-arg\n[doc-arg-ptr]]"32v" \{\
.        ds doc-str-At1 "\&Version\~32V
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v1" \{\
.        ds doc-str-At1 "\&Version\~1
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v2" \{\
.        ds doc-str-At1 "\&Version\~2
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v3" \{\
.        ds doc-str-At1 "\&Version\~3
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v4" \{\
.        ds doc-str-At1 "\&Version\~4
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v5" \{\
.        ds doc-str-At1 "\&Version\~5
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v6" \{\
.        ds doc-str-At1 "\&Version\~6
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"v7" \{\
.        ds doc-str-At1 "\&Version\~7
.        as doc-str-At1 " \*[doc-Tn-font-size]AT&T UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"V" \{\
.        ds doc-str-At1 "\*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V
.        as doc-str-At1 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"V.1" \{\
.        ds doc-str-At1 "\*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.1
.        as doc-str-At1 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"V.2" \{\
.        ds doc-str-At1 "\*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.2
.        as doc-str-At1 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.      \}
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"V.4" \{\
.        ds doc-str-At1 "\*[doc-Tn-font-size]AT&T\*[doc-str-At] System\~V.4
.        as doc-str-At1 " \*[doc-Tn-font-size]UNIX\*[doc-str-At]
.      el \
.        nr doc-arg-ptr -1
.    \}\}\}\}\}\}\}\}\}\}\}\}\}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-At1]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-At (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-At]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" NS Fx user macro
.\" NS   print FreeBSD
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size
.\" NS
.\" NS local variable:
.\" NS   doc-str-Fx, doc-str-Fx1, doc-reg-Fx
.\" NS
.\" NS width register `Fx' defined in doc-common
.
.de Fx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-Fx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  \" default value if no argument
.  ds doc-str-Fx1 \*[doc-Tn-font-size]FreeBSD\*[doc-str-Fx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Fx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      as doc-str-Fx1 \~\*[doc-arg\n[doc-arg-ptr]]
.
.      ie        "\*[doc-arg\n[doc-arg-ptr]]"1.0" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"1.1" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"1.1.5" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"1.1.5.1" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.0" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.0.5" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.1" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.1.5" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.1.6" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.1.7" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2.1" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2.2" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2.5" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2.6" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2.7" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"2.2.8" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"3.0" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"3.1" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"3.2" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"3.3" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"3.4" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"3.5" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"4.0" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"4.1" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"4.2" .
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"5.0" .
.      el \{\
.        tmc "mdoc warning: .Fx: Unknown FreeBSD version
.        tm1 " `\*[doc-arg\n[doc-arg-ptr]]' (#\n[.c])
.    \}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Fx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-Fx (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-Fx]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" NS Nx user macro
.\" NS   print NetBSD
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS
.\" NS local variable:
.\" NS   doc-str-Nx, doc-str-Nx1, doc-reg-Nx
.\" NS
.\" NS width register `Nx' defined in doc-common
.
.de Nx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-Nx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  \" default value if no argument
.  ds doc-str-Nx1 \*[doc-Tn-font-size]N\s[\n[doc-curr-size]]et
.  as doc-str-Nx1 \*[doc-Tn-font-size]BSD\*[doc-str-Nx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Nx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \{\
.      ie        "\*[doc-arg\n[doc-arg-ptr]]"0.8a" .as doc-str-Nx1 \~0.8A
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"0.9a" .as doc-str-Nx1 \~0.9A
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"1.0a" .as doc-str-Nx1 \~1.0A
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"1.2a" .as doc-str-Nx1 \~1.2A
.      el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"1.2b" .as doc-str-Nx1 \~1.2B
.      el \
.        as doc-str-Nx1 \~\*[doc-arg\n[doc-arg-ptr]]
.      \}\}\}\}\}
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Nx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-Nx (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-Nx]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" NS Ox user macro
.\" NS   print OpenBSD
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS
.\" NS local variable:
.\" NS   doc-str-Ox, doc-str-Ox1, doc-reg-Ox
.\" NS
.\" NS width register `Ox' defined in doc-common
.
.de Ox
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-Ox \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  \" default value if no argument
.  ds doc-str-Ox1 \*[doc-Tn-font-size]OpenBSD\*[doc-str-Ox]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Ox
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.      as doc-str-Ox1 \~\*[doc-arg\n[doc-arg-ptr]]
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Ox1]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-Ox (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-Ox]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" NS Bsx user macro
.\" NS   print BSD/OS
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS
.\" NS local variable:
.\" NS   doc-str-Bsx, doc-str-Bsx1, doc-reg-Bsx
.\" NS
.\" NS width register `Bsx' defined in doc-common
.
.de Bsx
.  nr doc-curr-font \n[.f]
.  nr doc-curr-size \n[.s]
.  ds doc-str-Bsx \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.  \" default value if no argument
.  ds doc-str-Bsx1 \*[doc-Tn-font-size]BSD/OS\*[doc-str-Bsx]
.
.  if !\n[doc-arg-limit] \
.    if \n[.$] \{\
.      ds doc-macro-name Bsx
.      doc-parse-args \$@
.    \}
.
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-arg-ptr +1
.    ie (\n[doc-type\n[doc-arg-ptr]] == 2) \
.      as doc-str-Bsx1 \~\*[doc-arg\n[doc-arg-ptr]]
.    el \
.      nr doc-arg-ptr -1
.  \}
.
.  \" replace current argument with result
.  ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Bsx1]
.  nr doc-type\n[doc-arg-ptr] 2
.  if (\n[doc-arg-limit] > \n[doc-arg-ptr]) \{\
.    nr doc-reg-Bsx (\n[doc-arg-ptr] + 1)
.    if !(\n[doc-type\n[doc-reg-Bsx]] == 3) \
.      ds doc-space\n[doc-arg-ptr] "\*[doc-space]
.  \}
.
.  doc-print-recursive
..
.
.
.\" The Bt macro should go away now
.
.\" NS Bt user macro (not parsed, not callable)
.\" NS   print "is currently in beta test." (HISTORY section)
.\" NS
.\" NS width register `Bt' defined in doc-common
.
.de Bt
.  nop \&is currently in beta test.
..
.
.
.\" NS Px user macro
.\" NS   print POSIX
.
.ds Px \*[doc-Tn-font-size]POSIX
.
.
.\" NS Ai user macro
.\" NS   print ANSI
.
.ds Ai \*[doc-Tn-font-size]ANSI
.
.
.\" NS St user macro
.\" NS   standards (posix, ansi - formal standard names)
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS 
.\" NS local variable:
.\" NS   doc-str-St, doc-str-St1, doc-reg-St
.\" NS
.\" NS width register `St' defined in doc-common
.
.de St
.  if !\n[doc-arg-limit] \{\
.    ie \n[.$] \{\
.      ds doc-macro-name St
.      doc-parse-args \$@
.    \}
.    el \
.      doc-St-usage
.  \}
.
.  nr doc-arg-ptr +1
.  if (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \{\
.    nr doc-curr-font \n[.f]
.    nr doc-curr-size \n[.s]
.    ds doc-str-St \f[\n[doc-curr-font]]\s[\n[doc-curr-size]]
.
.    ie        "\*[doc-arg\n[doc-arg-ptr]]"-p1003.1" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.1
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px]\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.1-88" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.1-1988
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px]\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.1-90" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.1-1990
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px]\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.1b" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.1b
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px]\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.1b-93" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.1b-1993
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px]\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.1g" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.1g
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px]\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.2" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.2
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px].2\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-p1003.2-92" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]1003.2-1992
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px].2\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-iso9945-1" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]ISO/IEC
.      as doc-str-St1 " \*[doc-str-St]9945-1:1996
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]\*[Px].1\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-ansiC" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]ISO
.      as doc-str-St1 " \*[doc-str-St]9899:1990
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]ISO\~C\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-ansiC-89" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]ANSI
.      as doc-str-St1 " \*[doc-str-St]X\~3.159-1989
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]ANSI\~C\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-iso9899" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]ISO
.      as doc-str-St1 " \*[doc-str-St]9899-1990
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]ISO\~C\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-ieee754" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]IEEE Std
.      as doc-str-St1 " \*[doc-str-St]754-1985
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-iso8802-3" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]
.      as doc-str-St1 ISO\~\*[doc-str-St]8802-3:1989
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-xpg3" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]NX/Open Portability Guide
.      as doc-str-St1 " Issue\~3\*[doc-str-St]
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]NXPG3\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-xpg4" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]NX/Open Portability Guide
.      as doc-str-St1 " Issue\~4\*[doc-str-St]
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]NXPG4\*[doc-str-St]\*[Rq])
.    \}
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"-xpg4.2" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]NX/Open Portability Guide
.      as doc-str-St1 " Issue\~4.2\*[doc-str-St]
.      as doc-str-St1 " (\*[Lq]\*[doc-Tn-font-size]NXPG4.2\*[doc-str-St]\*[Rq])
.    \}
.    el .ie "\*[doc-arg\n[doc-arg-ptr]]"-susv2" \{\
.      ds doc-str-St1 \*[doc-Tn-font-size]Version\~2 of the
.      as doc-str-St1 " Single UNIX Specification\*[doc-str-St]
.    \}
.    el \{\
.      ds doc-str-St1
.      doc-St-usage
.    \}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}
.
.    \" replacing argument with result
.    ds doc-arg\n[doc-arg-ptr] "\*[doc-str-St1]
.
.    doc-print-recursive
.  \}
..
.
.
.de doc-St-usage
.  tm1 "Usage: .St [-p1003.1 | -p1003.1-88 | -p1003.1-90 | -p1003.1b |
.  tm1 "            -p1003.1b-93 | -p1003.1g | -p1003.2 | -p1003.2-92 |
.  tm1 "            -iso9945-1 | -ansiC | -ansiC-89 | -isoC | -iso8802-3 |
.  tm1 "            -iso9899 | -ieee754 | -xpg3 | -xpg4 | -xpg4.2 |
.  tm1 "            -susv2] \*[doc-punct-chars] ... (#\n[.c])
..
.
.
.\" NS Lb user macro
.\" NS   formal library names for LIBRARY sections
.\" NS
.\" NS modifies:
.\" NS   doc-macro-name, doc-curr-font, doc-curr-size, doc-arg-ptr
.\" NS 
.\" NS local variable:
.\" NS   doc-str-Lb, doc-reg-Lb
.\" NS
.\" NS width register `Lb' defined in doc-common
.
.de Lb
.  if !\n[doc-arg-limit] \{\
.    ie \n[.$] \{\
.      ds doc-macro-name Lb
.      doc-parse-args \$@
.    \}
.    el \
.      tm Usage: .Lb [library name]
.  \}
.
.  nr doc-arg-ptr +1
.  if (\n[doc-arg-limit] >= \n[doc-arg-ptr]) \{\
.    ie        "\*[doc-arg\n[doc-arg-ptr]]"libarm32" \
.      ds doc-str-Lb ARM32 Architecture Library (libarm32, \-larm32)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libi386" \
.      ds doc-str-Lb i386 Architecture Library (libi386, \-li386)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libc" \
.      ds doc-str-Lb Standard C\~Library (libc, \-lc)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libcompat" \
.      ds doc-str-Lb Compatibility Library (libcompat, \-lcompat)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libcrypt" \
.      ds doc-str-Lb Crypt Library (libcrypt, \-lcrypt)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libcurses" \
.      ds doc-str-Lb Curses Library (libcurses, \-lcurses)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libedit" \
.      ds doc-str-Lb Command Line Editor Library (libedit, \-ledit)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libipsec" \
,      ds doc-str-Lb IPsec Policy Control Library (libipsec, \-lipsec)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libkvm" \
.      ds doc-str-Lb Kernel Data Access Library (libkvm, \-lkvm)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libm" \
.      ds doc-str-Lb Math Library (libm, \-lm)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libmenu" \
.      ds doc-str-Lb Curses Menu Library (libmenu, \-lmenu)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libossaudio" \
.      ds doc-str-Lb OSS Audio Emulation Library (libossaudio, \-lossaudio)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libposix" \
.      \*[Px] Compatibility Library (libposix, \-lposix)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libresolv" \
.      ds doc-str-Lb DNS Resolver Library (libresolv, \-lresolv)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libtermcap" \
.      ds doc-str-Lb Termcap Access Library (libtermcap, \-ltermcap)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libutil" \
.      ds doc-str-Lb System Utilities Library (libutil, \-lutil)
.    el \{ .ie "\*[doc-arg\n[doc-arg-ptr]]"libz" \
.      ds doc-str-Lb Compression Library (libz, \-lz)
.    el \{\
.      tmc "mdoc warning: .Lb: no description for library
.      tm1 " `\*[doc-arg\n[doc-arg-ptr]]' available
.      ds doc-str-Lb library \*[Lq]\*[doc-arg\n[doc-arg-ptr]]\*[Rq]
.    \}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}\}
.
.    \" replacing argument with result
.    ds doc-arg\n[doc-arg-ptr] "\*[doc-str-Lb]
.
.    doc-print-recursive
.  \}
..
.
.\" EOF
